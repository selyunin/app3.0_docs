name: Pipeline

on:
  push:
    branches-ignore:
      - gh-pages

jobs:
  build_job:
    runs-on: ubuntu-latest
    container:
      image: kselyunin/python3.9-sphinx-rtd:v0.1
    env:
      VERSION_MAJOR: 0
      VERSION_MINOR: 0
      DOCS_VERSION: 0.0.0
      PROJECT: rsl_sphinx_docs

    steps:
      - uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.github_token }}

      - uses: actions/checkout@v3
        with:
          repository: selyunin/app3.0_docs
          path: 'app30_docs_src'
          fetch-depth: 0
          ref: ${{ env.GITHUB_SHA }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Read version number
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        run: |
          source app30_docs_src/.env
          echo "VERSION_MAJOR=${VERSION_MAJOR}" >> $GITHUB_ENV
          echo "VERSION_MINOR=${VERSION_MINOR}" >> $GITHUB_ENV
          echo "DOCS_VERSION=${VERSION_MAJOR}.${VERSION_MINOR}.${BUILD_NUMBER}" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Build documentation
        shell: bash
        run: |
          ls -la .
          pwd
          ls -la app30_docs_src
          cd app30_docs_src && sphinx-build -b html source build/html

      - name: Update generated HTML files
        shell: bash
        run: |
          echo "GitHub Workspace: $GITHUB_WORKSPACE"
          cd ${GITHUB_WORKSPACE}
          pwd
          ls -la .
          cd app30_docs_src && git checkout gh-pages && cd ..
          rm -rf app30_docs_src/docs && mkdir -pv app30_docs_src/docs
          cp -r app30_docs_src/build/html/* app30_docs_src/docs
          touch app30_docs_src/docs/.nojekyll
          ls -la app30_docs_src/docs/

      - name: Commit newly generated sources
        uses: EndBug/add-and-commit@v7 # You can change this to use a specific version
        with:
          # The arguments for the `git add` command (see the paragraph below for more info)
          # Default: '.'
          add: '.'

          # Name of the branch to use, if different from the one that triggered the workflow
          # Default: the branch that triggered the run
          branch: gh-pages

          # The local path to the directory where your repository is located. You should use actions/checkout first to set it up
          # Default: '.'
          cwd: './app30_docs_src'

          # The message for the commit
          # Default: 'Commit from GitHub Actions (name of the workflow)'
          message: 'Docs v${{ env.DOCS_VERSION }}'

          # The flag used on the pull strategy. Use NO-PULL to avoid the action pulling at all.
          # Default: '--no-rebase'
          pull: ''

          # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
          # Default: true
          push: true

          # The arguments for the `git rm` command (see the paragraph below for more info)
          # Default: ''
          remove: ''

          # Whether to use the --signoff option on `git commit` (only `true` and `false` are accepted)
          # Default: false
          signoff: true

          # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
          # Default: ''
          tag: 'v${{ env.DOCS_VERSION }} --force'